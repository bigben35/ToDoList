security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        users_in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            form_login:
            #  chemin (route) vers la page de connexion
                login_path: app_login
                #  route utilisée pour la vérification du formulaire de connexion
                check_path: app_login
            logout:
                 path: app_logout
                # #  route vers laquelle l'utilisateur sera redirigé après s'être déconnecté avec succès
                 target: app_login

    access_control:
        - { path: '^/login', roles: PUBLIC_ACCESS }
        - { path: '^/users', roles: PUBLIC_ACCESS }
        - { path: '^/', roles: ROLE_USER }

        # les utilisateurs ayant le rôle ROLE_ADMIN pourront accéder à toutes les pages réservées aux utilisateurs avec le rôle ROLE_USER, car ils ont un rôle de niveau supérieur. 

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon

